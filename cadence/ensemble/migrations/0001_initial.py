# Generated by Django 5.1.3 on 2025-01-08 22:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('type', models.CharField(max_length=30)),
                ('pdf', models.FileField(blank=True, upload_to='pdfs/')),
            ],
        ),
        migrations.CreateModel(
            name='Ensemble',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('organization', models.CharField(blank=True, max_length=30)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='ensemble-images/')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('login_count', models.IntegerField(default=0)),
                ('number_of_sets_viewed', models.IntegerField(default=0)),
                ('number_of_songs_viewed', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True)),
                ('date', models.DateField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('number_of_times_viewed', models.IntegerField(default=0)),
                ('ensemble', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ensemble.ensemble')),
            ],
        ),
        migrations.AddField(
            model_name='ensemble',
            name='sets',
            field=models.ManyToManyField(blank=True, related_name='ensemble_sets', to='ensemble.set'),
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('composer', models.CharField(blank=True, max_length=30)),
                ('lyricist', models.CharField(blank=True, max_length=30)),
                ('arranger', models.CharField(blank=True, max_length=30)),
                ('key', models.CharField(blank=True, max_length=30)),
                ('hymn_tune', models.CharField(blank=True, max_length=30)),
                ('hymn_number', models.CharField(blank=True, max_length=30)),
                ('compilation', models.CharField(blank=True, max_length=30)),
                ('year', models.IntegerField(blank=True)),
                ('publisher', models.CharField(blank=True, max_length=30)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('number_of_times_viewed', models.IntegerField(default=0)),
                ('number_of_times_played', models.IntegerField(default=0)),
                ('charts', models.ManyToManyField(blank=True, related_name='song_charts', to='ensemble.chart')),
                ('ensembles', models.ManyToManyField(blank=True, related_name='song_ensembles', to='ensemble.ensemble')),
                ('sets', models.ManyToManyField(blank=True, related_name='songs_set', to='ensemble.set')),
            ],
        ),
        migrations.AddField(
            model_name='set',
            name='songs',
            field=models.ManyToManyField(blank=True, related_name='set_songs', to='ensemble.song'),
        ),
        migrations.AddField(
            model_name='ensemble',
            name='songs',
            field=models.ManyToManyField(blank=True, related_name='ensemble_songs', to='ensemble.song'),
        ),
        migrations.AddField(
            model_name='chart',
            name='song',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ensemble.song'),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('type', models.CharField(max_length=30)),
                ('audio', models.FileField(blank=True, upload_to='audio/')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ensemble.song')),
            ],
        ),
        migrations.AddField(
            model_name='song',
            name='tracks',
            field=models.ManyToManyField(blank=True, related_name='song_tracks', to='ensemble.track'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=30)),
                ('email', models.EmailField(blank=True, max_length=30)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('image', models.ImageField(blank=True, upload_to='user-images/')),
                ('voice_part', models.CharField(blank=True, max_length=30)),
                ('instrument', models.CharField(blank=True, max_length=30)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('login_count', models.IntegerField(default=0)),
                ('charts_viewed', models.ManyToManyField(blank=True, related_name='user_charts_viewed', to='ensemble.chart')),
                ('ensembles', models.ManyToManyField(blank=True, related_name='user_ensembles', to='ensemble.ensemble')),
                ('sets_viewed', models.ManyToManyField(blank=True, related_name='user_sets_viewed', to='ensemble.set')),
                ('song_likes', models.ManyToManyField(blank=True, related_name='user_song_likes', to='ensemble.song')),
                ('tracks_played', models.ManyToManyField(blank=True, related_name='user_tracks_played', to='ensemble.track')),
            ],
        ),
        migrations.AddField(
            model_name='song',
            name='liked_by',
            field=models.ManyToManyField(blank=True, related_name='song_liked_by', to='ensemble.user'),
        ),
        migrations.AddField(
            model_name='ensemble',
            name='admins',
            field=models.ManyToManyField(blank=True, related_name='ensembles_administered', to='ensemble.user'),
        ),
        migrations.AddField(
            model_name='ensemble',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='ensembles_joined', to='ensemble.user'),
        ),
    ]
